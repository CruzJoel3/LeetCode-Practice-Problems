/*
Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array.
*/
class Solution {
    public int missingNumber(int[] nums) {
        Map<Integer, Integer> mapCounter = new HashMap<Integer, Integer>();
        int answer = 0;
        for(int i = 0; i < nums.length; i++){
            mapCounter.put(nums[i],0);
        }
        
        for(int j = 0; j <= nums.length;j++){
            if(mapCounter.get(j) == null){
                answer = j;
                break;
            }
            else{
                continue;
            }
            
        }
        return answer;
    }
}

//Could you implement a solution using only O(1) extra space complexity and O(n) runtime complexity?

*You just do 1 for loop from 0 to n and keep track of one sum which is the sum of all elements and 
another sum which us the sum of all indices + 1 since the indices will be from 0 through n-1. Then subtract
the two numbers, and that'll tell you what you're missing from the array*
