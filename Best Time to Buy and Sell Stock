/*
You are given an array prices where prices[i] is the price of a given stock on the ith day.

You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.

Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.
*/

class Solution {
    public int maxProfit(int[] prices) {
        int currentDifference = 0;
        int maxDifference = 0;
        int frontPointer = 0;
        for(int backPointer = 1; backPointer < prices.length; backPointer++){
            if(prices[frontPointer] > prices[backPointer]){
                frontPointer = backPointer;
                continue;
            }
            else{
                currentDifference = prices[backPointer] - prices[frontPointer] ;
            }
            
            if(currentDifference > maxDifference){
                maxDifference = currentDifference;
            }
        }
    return maxDifference;
    }
}
