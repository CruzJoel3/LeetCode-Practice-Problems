/*
Create an array where each element of the answer array is the product of all
the elements of the input array, except the element in the input array that
lies in the same index of the element we're populating in the answer array
*/

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int answer[] = new int[nums.length];
        int frontProduct[] = new int[nums.length];
        int backProduct[] = new int[nums.length];
        int product = 1;
        
        for(int i = 0; i < nums.length; i++){
            product = product*nums[i];
            frontProduct[i] = product;
        }
        product = 1;
        
        for(int i = nums.length-1; i >= 0; i--){
            product = product*nums[i];
            backProduct[i] = product;
        }
        
        for(int i = 0; i < nums.length; i++){
            if(i == 0){
                answer[i] = backProduct[i+1];
            }
            else if(i == nums.length-1){
                answer[i] = frontProduct[nums.length-2];
            }
            else{
                answer[i] = frontProduct[i-1]*backProduct[i+1];
            }                      
        }
        return answer;
    }
}
