/*
Output a LinkedList whoâ€™s a reverse of a passed in Linked List 
*/


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode load = head;
        List<Integer> duplicate = new ArrayList<>();
        ListNode answer = head;
        
        while(load!=null){
            duplicate.add(load.val);
            if(answer.next == null){
                break;
            }
            else{
                load = load.next;
            }
        }
        
        for(int i = duplicate.size()-1; i >= 0 ; i--){
            head.val = duplicate.get(i);
            head = head.next;
        }
        return answer;
    }
}
